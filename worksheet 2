#List of cources in any order
courses =[ 'Introduction to Programing', 
          'Calculus',
          'Data Structure and Alogorithms',
          'Linear Algebra','Physics I',
          'Chemistry I',
          'Biology I',
          'Microeconomics',
          'Macroeconomics', 
          'Psychology I', 
          'History', 
          'English Composition I', 
          'Introduction to Philosophy', 
          'Calculus II', 
          'Discrete Mathamatics'
          ]
# Print the raw list
print (courses)

#Sorted alphabetically
courses_sorted = sorted(courses)
print(courses_sorted)

#Reverse order
reverse_courses= sorted(courses, reverse= True)
print(reverse_courses)

# Reverse the original list
courses.reverse()
print(courses)

#Reverse the list again
courses.reverse()
print(courses)
#sorting origin list
courses.sort()
print(courses)
# sort list in alphabatical order
courses.sort(reverse=True)
print(courses)
 
#Announcing Sorted courses
courses_sorted=sorted(courses)
print("The listed courses are available for intrest if the students meets","courses_sorted:")
print(courses)

#Replacing the "Biology I" with "Astrophysic I"
new_course= "Astrophysic"
withdrawn_courses= courses[0]
courses[0]=new_course
print(f"The courses'{withdrawn_courses}'has been withdrawn and replaced by '{new_course}' ")

#generating tuples from course_id and course_name
course_tuples=[
    (1,'Introduction of programing'),
    (2,'Calculus I'),
    (3,'Data structure and Algorithms'),
    #add more new subject as required

]
#Empty list to store courses names
course_nam=[]
#loop from tuples and extract courses names for course_id, course_name in course_tuples:course_nam.append(course_nam)
#print
print(course_nam)
                        
# List of departments and their course IDs
units = [
    [1, "Computer Science"],
    [2, "Mathematics"],
    [3, "Computer Science"],
    [4, "Mathematics"],
    [5, "Physics"],
    [6, "Chemistry"],
    [7, "Biology"],
    [8, "Economics"],
    [9, "Economics"],
    [10, "Psychology"],
    [11, "History"],
    [12, "English"],
    [13, "Philosophy"],
    [14, "Mathematics"],
    [15, "Computer Science"]
]

# Start the infinite loop
while True:
    user_input = input("Enter a course ID (1-15), or type 'quit' or 0 to exit: ")

    if user_input.lower() == "quit" or user_input == "0":
        print("Course ID is out of range (1-15), exiting.")
        break
    
    if user_input.isdigit():
        course_id = int(user_input)
        if 1 <= course_id <= 15:
            found = False
            for course in units:
                if course[0] == course_id:
                    print(f"Course ID {course_id} is in the {course[1]} department.")
                    found = True
                    break
            
            if not found:
                print(f"Course ID {course_id} is not found.")
        else:
            print("Course ID is out of range (1-15), try again.")
    else:
        print(f"The value {user_input} has been used to exit.")
        break
    # Multi-dimensional list with course information
courses = [
    [1, "Introduction to Programming", "Computer Science", "None"],
    [2, "Calculus I", "Mathematics", "None"],
    [3, "Data Structures and Algorithms", "Computer Science", "Introduction to Programming"],
    [4, "Linear Algebra", "Mathematics", "None"],
    [5, "Physics I", "Physics", "None"],
    [6, "Chemistry I", "Chemistry", "None"],
    [7, "Biology I", "Biology", "None"],
    [8, "Microeconomics", "Economics", "None"],
    [9, "Macroeconomics", "Economics", "Microeconomics"],
    [10, "Psychology I", "Psychology", "None"],
    [11, "History I", "History", "None"],
    [12, "English Composition I", "English", "None"],
    [13, "Introduction to Philosophy", "Philosophy", "None"],
    [14, "Calculus II", "Mathematics", "Calculus I"],
    [15, "Discrete Mathematics", "Computer Science", "Introduction to Programming"]
]

# Start the infinite loop
while True:
    user_input = input("Enter a course ID (1-15), or type 'quit' or 0 to exit: ")

    if user_input.lower() == "quit" or user_input == "0":
        print("Exiting.")
        break
    
    if user_input.isdigit():
        course_id = int(user_input)
        if 1 <= course_id <= 15:
            found = False
            for course in courses:
                if course[0] == course_id:
                    print(f"Course ID: {course_id}")
                    print(f"Course Name: {course[1]}")
                    print(f"Department: {course[2]}")
                    print(f"Prerequisites: {course[3]}")
                    found = True
                    break
            
            if not found:
                print(f"Course ID {course_id} is not found.")
        else:
            print("Course ID is out of range (1-15), try again.")
    else:
        print(f"Invalid input: {user_input}. Please enter a valid course ID.")
